/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'


// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


dependencies {
    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.27'
	compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.27'
    compile group: 'org.glassfish.jersey.connectors', name: 'jersey-apache-connector', version: '2.27'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.27'
    
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.7'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.47'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.0.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '5.1.0.RELEASE'
    compile group: 'hikari-cp', name: 'hikari-cp', version: '2.6.0'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
    
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile group: 'com.microsoft.sqlserver', name:'sqljdbc4', version:'4.0'
    
   
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
    
    compile group: 'com.lmax', name: 'disruptor', version: '3.4.2'
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
	
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// Copy dependencies to 'lib' directory, as Netbeans usually did
task copyRuntimeLibs(type: Copy) {  
    into "$buildDir/libs/lib/"
    from configurations.compile
}
// attach to assemble task
assemble.dependsOn copyRuntimeLibs
 
// Using dependency list to generate a manifest with appropriate classpath
jar {
    manifest {
        attributes 'Main-Class' : 'cwb.webtyphwarn.main.Main'
        attributes 'Class-Path' : configurations.compile.collect { 'lib/' + it.getName() }.join(' ')
    }
}

